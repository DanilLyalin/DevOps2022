/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2022-10-26 18:05:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class game_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("    <title>Document</title>\n");
      out.write("</head>\n");
      out.write("<body style=\"background: whitesmoke;\">\n");
      out.write("    <div class=\"gameWind\" style=\"width: 100%;\n");
      out.write("                                 height: 100%;\n");
      out.write("                                 position: absolute;\n");
      out.write("                                 top: 0;\n");
      out.write("                                 left: 0;\n");
      out.write("                                 overflow: auto;\n");
      out.write("                                 white-space: nowrap;\n");
      out.write("                                 text-align: center;\n");
      out.write("                                 font-size: 0;\">\n");
      out.write("        <canvas height=\"700\" width=\"320\" id=\"Left\" style=\"margin-top: 1.5%; margin-right: 2px;\"></canvas>\n");
      out.write("        <canvas height=\"700\" width=\"320\" id=\"GameWindow\" style=\"margin-top: 1.5%;\" ></canvas>\n");
      out.write("        <canvas height=\"700\" width=\"400\" id=\"LeaderBoard\"style=\"margin-top: 1.5%; margin-left: 20px; margin-right: -80px\"></canvas>\n");
      out.write("    </div>\n");
      out.write("    <div>\n");
      out.write("        <p id=\"top\" style=\"visibility: hidden;\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${top}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("</p>\n");
      out.write("    </div>\n");
      out.write("    \n");
      out.write("    <script>\n");
      out.write("        var GW = document.getElementById('GameWindow');\n");
      out.write("        var context = GW.getContext('2d');\n");
      out.write("        var LB = document.getElementById('LeaderBoard');\n");
      out.write("        var LBcontext = LB.getContext('2d');\n");
      out.write("        var Left = document.getElementById('Left');\n");
      out.write("        var Leftcontext = Left.getContext('2d');\n");
      out.write("        const pixelSize = 32;\n");
      out.write("        const heightInPixel = 24;\n");
      out.write("        const widthInPixel = 12;\n");
      out.write("        var arrayOfPixels = [];\n");
      out.write("        for(let i = 0; i < heightInPixel; i++)\n");
      out.write("        {\n");
      out.write("            arrayOfPixels[i] = [];\n");
      out.write("            for(let j = 0; j < widthInPixel; j++){\n");
      out.write("                if(j == 0 || j == 11){\n");
      out.write("                    arrayOfPixels[i][j] = 1;\n");
      out.write("                }\n");
      out.write("                else{\n");
      out.write("                    arrayOfPixels[i][j] = 0;\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("        var playing = true;\n");
      out.write("        var figurePos = [[0,0],[0,0],[0,0],[0,0]];\n");
      out.write("        var savePos = [[0,0],[0,0],[0,0],[0,0]];\n");
      out.write("        var move = true;\n");
      out.write("        var fps = 0;\n");
      out.write("        var figure = [0,0];\n");
      out.write("        var scores = 0;\n");
      out.write("        var gameSpeed = 100;\n");
      out.write("        var nextFig = 0;\n");
      out.write("        var nextFigString = \"00000000\";\n");
      out.write("\n");
      out.write("        function drawNextText(){\n");
      out.write("            Leftcontext.fillStyle = 'white';\n");
      out.write("            Leftcontext.globalAlpha = 1;\n");
      out.write("            Leftcontext.strokeStyle = 'black';\n");
      out.write("            Leftcontext.fillRect(Left.width/2, 0, LB.width, 60);\n");
      out.write("            Leftcontext.strokeRect(Left.width/2-53, 0, pixelSize*6-1, 60);\n");
      out.write("            Leftcontext.strokeRect(Left.width/2-51, 2, pixelSize*6-3, 58);\n");
      out.write("            Leftcontext.fillStyle = 'black';\n");
      out.write("            Leftcontext.font = '36px monospace';\n");
      out.write("            Leftcontext.textAlign = 'center';\n");
      out.write("            Leftcontext.textBaseline = 'middle';\n");
      out.write("            Leftcontext.fillText('Next', Left.width/2 + 45, 35);\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        function drawNextFigure(nextNum){\n");
      out.write("            Leftcontext.fillStyle = 'black';\n");
      out.write("            Leftcontext.fillRect(Left.width/3, 60, pixelSize*6, pixelSize*4);\n");
      out.write("            Leftcontext.fillStyle = 'red';\n");
      out.write("            switch(nextNum){\n");
      out.write("                case(1): nextFigString = \"001100001100\";\n");
      out.write("                         break;\n");
      out.write("                case(2): nextFigString = \"011110000000\";\n");
      out.write("                         break;\n");
      out.write("                case(3): nextFigString = \"000110001100\";\n");
      out.write("                         break;\n");
      out.write("                case(4): nextFigString = \"001100000110\";\n");
      out.write("                         break;\n");
      out.write("                case(5): nextFigString = \"000010001110\";\n");
      out.write("                         break;\n");
      out.write("                case(6): nextFigString = \"010000011100\";\n");
      out.write("                         break;\n");
      out.write("                case(7): nextFigString = \"001110000100\";\n");
      out.write("                         break;\n");
      out.write("            }\n");
      out.write("            for(let y = 0; y < 2; y++){\n");
      out.write("                for(let x = 0; x < 6; x++){\n");
      out.write("                    if(nextFigString[y*6+x] == \"1\"){\n");
      out.write("                        Leftcontext.fillRect(Left.width/3+pixelSize*x, 60+pixelSize+y*pixelSize, pixelSize, pixelSize);\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("            Leftcontext.strokeStyle = 'gray';\n");
      out.write("            for(let y = 60; y < 60+pixelSize*4; y+=pixelSize){\n");
      out.write("                for(let x = Left.width/3; x < Left.width/3+pixelSize*6; x+=pixelSize){\n");
      out.write("                    Leftcontext.strokeRect(x, y, pixelSize, pixelSize);\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        function drawButtonRestart(){\n");
      out.write("            var btnRestart = {\n");
      out.write("                x:Left.width/2 - 22,\n");
      out.write("                y:Left.height/3 - 20,\n");
      out.write("                w:130,\n");
      out.write("                h:45,\n");
      out.write("                text:\"Restart\",\n");
      out.write("                state:\"default\",\n");
      out.write("                draw: function(){\n");
      out.write("                    Leftcontext.font = \"20px Arial \";\n");
      out.write("                    switch(this.state){\n");
      out.write("                        case \"over\":      \n");
      out.write("                        Leftcontext.fillStyle = \"red\";\n");
      out.write("                        Leftcontext.fillRect(this.x,this.y,this.w,this.h);\n");
      out.write("                        Leftcontext.fillStyle = \"black\";\n");
      out.write("                        Leftcontext.fillText(\"Restart?\",this.x+65,this.y+this.h/2+4 );\n");
      out.write("                    break;\n");
      out.write("                        default:\n");
      out.write("                        Leftcontext.fillStyle = \"gray\";\n");
      out.write("                        Leftcontext.fillRect(this.x,this.y,this.w,this.h);\n");
      out.write("                        Leftcontext.fillStyle = \"black\";\n");
      out.write("                        Leftcontext.fillText(\"Restart\",this.x+65,this.y+this.h/2+4 );\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("            };\n");
      out.write("            btnRestart.draw();\n");
      out.write("            Left.addEventListener(\"mousedown\",function(e){\n");
      out.write("                    if(checkCollision(e.offsetX,e.offsetY,btnRestart )){\n");
      out.write("                        if(playing != false){\n");
      out.write("                            playing = false;\n");
      out.write("                            result = confirm(\"Are you sure? Your scores will be lost!\");\n");
      out.write("                            if (result == true){\n");
      out.write("                            document.location.href = \"http://localhost:8080/ServletTetris/game\";\n");
      out.write("                            }\n");
      out.write("                            playing = true;\n");
      out.write("                        }\n");
      out.write("                        else{\n");
      out.write("                            document.location.href = \"http://localhost:8080/ServletTetris/game\";\n");
      out.write("                        }\n");
      out.write("                    }\n");
      out.write("            },false);\n");
      out.write("            \n");
      out.write("            \n");
      out.write("            Left.addEventListener(\"mousemove\",function(e){\n");
      out.write("            btnRestart.state = checkCollision(e.offsetX,e.offsetY,btnRestart )?\"over\":\"def\";\n");
      out.write("                btnRestart.draw();\n");
      out.write("            },false);\n");
      out.write("            \n");
      out.write("            function checkCollision(x,y,obj){\n");
      out.write("                return x >= obj.x && x <= obj.x + obj.w &&\n");
      out.write("                y >= obj.y && y <= obj.y + obj.h ;\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        function drawButtonLeaderboard(){\n");
      out.write("            var btnLB = {\n");
      out.write("                x:Left.width/2 - 22,\n");
      out.write("                y:Left.height/3 + 40,\n");
      out.write("                w:130,\n");
      out.write("                h:45,\n");
      out.write("                text:\"Leaderboard\",\n");
      out.write("                state:\"default\",\n");
      out.write("                draw: function(){\n");
      out.write("                    Leftcontext.font = \"20px Arial \";\n");
      out.write("                    switch(this.state){\n");
      out.write("                        case \"over\":      \n");
      out.write("                        Leftcontext.fillStyle = \"red\";\n");
      out.write("                        Leftcontext.fillRect(this.x,this.y,this.w,this.h);\n");
      out.write("                        Leftcontext.fillStyle = \"black\";\n");
      out.write("                        Leftcontext.fillText(\"Open?\",this.x+65,this.y+this.h/2+4 );\n");
      out.write("                    break;\n");
      out.write("                        default:\n");
      out.write("                        Leftcontext.fillStyle = \"gray\";\n");
      out.write("                        Leftcontext.fillRect(this.x,this.y,this.w,this.h);\n");
      out.write("                        Leftcontext.fillStyle = \"black\";\n");
      out.write("                        Leftcontext.fillText(\"Leaderboard\",this.x+65,this.y+this.h/2+4);\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("            };\n");
      out.write("            btnLB.draw();\n");
      out.write("            Left.addEventListener(\"mousedown\",function(e){\n");
      out.write("                    if(checkCollision(e.offsetX,e.offsetY,btnLB )){\n");
      out.write("                        if(playing != false){\n");
      out.write("                            playing = false;\n");
      out.write("                            result = confirm(\"Are you sure? Your scores will be lost!\");\n");
      out.write("                            if (result == true){\n");
      out.write("                            document.location.href = \"http://localhost:8080/ServletTetris/scores\";\n");
      out.write("                            }\n");
      out.write("                            playing = true;\n");
      out.write("                        }\n");
      out.write("                        else{\n");
      out.write("                            document.location.href = \"http://localhost:8080/ServletTetris/scores\";\n");
      out.write("                        }\n");
      out.write("                    }\n");
      out.write("            },false);\n");
      out.write("            \n");
      out.write("            \n");
      out.write("            Left.addEventListener(\"mousemove\",function(e){\n");
      out.write("            btnLB.state = checkCollision(e.offsetX,e.offsetY,btnLB )?\"over\":\"def\";\n");
      out.write("                btnLB.draw();\n");
      out.write("            },false);\n");
      out.write("            \n");
      out.write("            function checkCollision(x,y,obj){\n");
      out.write("                return x >= obj.x && x <= obj.x + obj.w &&\n");
      out.write("                y >= obj.y && y <= obj.y + obj.h ;\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        function leaderBoard(){\n");
      out.write("            let jsonTop = document.getElementById('top').innerHTML;\n");
      out.write("            jsonTop = JSON.parse(jsonTop);\n");
      out.write("            LBcontext.fillStyle = 'black';\n");
      out.write("            LBcontext.fillRect(0, 0, LB.width, 460);\n");
      out.write("            LBcontext.fillStyle = 'white';\n");
      out.write("            LBcontext.globalAlpha = 1;\n");
      out.write("            LBcontext.strokeStyle = 'black';\n");
      out.write("            LBcontext.fillRect(0, 0, LB.width, 60);\n");
      out.write("            LBcontext.strokeRect(0, 0, LB.width, 60);\n");
      out.write("            LBcontext.strokeRect(2, 2, LB.width-3, 58);\n");
      out.write("            LBcontext.globalAlpha = 1;\n");
      out.write("            LBcontext.fillStyle = 'white';\n");
      out.write("            LBcontext.fillRect(LB.width/3*2, 3, 2, 460);\n");
      out.write("            LBcontext.fillStyle = 'black';\n");
      out.write("            LBcontext.font = '36px monospace';\n");
      out.write("            LBcontext.textAlign = 'center';\n");
      out.write("            LBcontext.textBaseline = 'middle';\n");
      out.write("            LBcontext.fillText('Top-10 players', LB.width / 2, 30);\n");
      out.write("            LBcontext.fillStyle = 'white';\n");
      out.write("            LBcontext.font = '30px monospace';\n");
      out.write("            let numSpaces;\n");
      out.write("            let spaces =\"\";\n");
      out.write("            for(let i = 0; i < jsonTop.length; i++){\n");
      out.write("                if (i < jsonTop.length){\n");
      out.write("                LBcontext.textAlign = 'left';\n");
      out.write("                LBcontext.fillText(jsonTop[i].name, 20 , 80+40*i);\n");
      out.write("                LBcontext.textAlign = 'right';\n");
      out.write("                LBcontext.fillText(jsonTop[i].score+'\\n', LB.width -10 , 80+40*i);\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        function drawGame(){\n");
      out.write("            context.fillStyle = 'black';\n");
      out.write("            context.fillRect(0, 0, GW.width, GW.height);\n");
      out.write("            context.fillStyle = 'yellow';\n");
      out.write("            for(let y = 0; y < heightInPixel; y++){\n");
      out.write("                for(let x = 0; x < widthInPixel; x++){\n");
      out.write("                    if(arrayOfPixels[y][x] == 1)\n");
      out.write("                    context.fillRect((x-1)*pixelSize, (y-2)*pixelSize, pixelSize, pixelSize);\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("            context.fillStyle = 'red';\n");
      out.write("            for(let i = 0; i < 4; i++){\n");
      out.write("                    context.fillRect((figurePos[i][1]-1)*pixelSize, (figurePos[i][0]-2)*pixelSize, pixelSize, pixelSize);\n");
      out.write("            }\n");
      out.write("            context.strokeStyle = 'gray';\n");
      out.write("            for(let y = 0; y < heightInPixel-2; y++){\n");
      out.write("                for(let x = 0; x < widthInPixel; x++){\n");
      out.write("                    context.strokeRect(x*pixelSize, y*pixelSize, pixelSize, pixelSize);\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("            context.fillStyle = 'white';\n");
      out.write("            context.globalAlpha = 1;\n");
      out.write("            context.fillRect(0, GW.height-60, GW.width, 60);\n");
      out.write("            context.globalAlpha = 1;\n");
      out.write("            context.fillStyle = 'black';\n");
      out.write("            context.font = '36px monospace';\n");
      out.write("            context.textAlign = 'center';\n");
      out.write("            context.textBaseline = 'middle';\n");
      out.write("            context.fillText('User score: '+ scores, GW.width / 2, GW.height-30);\n");
      out.write("            context.strokeStyle = 'black';\n");
      out.write("            context.strokeRect(0, GW.height-60, GW.width, 60);\n");
      out.write("            context.strokeRect(2, GW.height-58, GW.width-3, 58);\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        function putInArray(fig){\n");
      out.write("            switch(fig){\n");
      out.write("                case(1): //O\n");
      out.write("                    arrayOfPixels[0][5] = 2;\n");
      out.write("                    arrayOfPixels[0][6] = 2;\n");
      out.write("                    arrayOfPixels[1][5] = 2;\n");
      out.write("                    arrayOfPixels[1][6] = 2;\n");
      out.write("                    figurePos[0][0] = 1;\n");
      out.write("                    figurePos[1][0] = 1;\n");
      out.write("                    figurePos[2][0] = 2;\n");
      out.write("                    figurePos[3][0] = 2;\n");
      out.write("                    figurePos[0][1] = 5;\n");
      out.write("                    figurePos[1][1] = 6;\n");
      out.write("                    figurePos[2][1] = 5;\n");
      out.write("                    figurePos[3][1] = 6;\n");
      out.write("                    break;\n");
      out.write("                case(2): // |\n");
      out.write("                    arrayOfPixels[1][4] = 2;\n");
      out.write("                    arrayOfPixels[1][5] = 2;\n");
      out.write("                    arrayOfPixels[1][6] = 2;\n");
      out.write("                    arrayOfPixels[1][7] = 2;\n");
      out.write("                    for(let i = 0; i < 4; i++){\n");
      out.write("                        figurePos[i][0] = 2;\n");
      out.write("                    }\n");
      out.write("                    figurePos[0][1] = 4;\n");
      out.write("                    figurePos[1][1] = 5;\n");
      out.write("                    figurePos[2][1] = 6;\n");
      out.write("                    figurePos[3][1] = 7;\n");
      out.write("                    break;    \n");
      out.write("                case(3): // S\n");
      out.write("                    arrayOfPixels[0][5] = 2;\n");
      out.write("                    arrayOfPixels[0][6] = 2;\n");
      out.write("                    arrayOfPixels[1][4] = 2;\n");
      out.write("                    arrayOfPixels[1][5] = 2;\n");
      out.write("                    figurePos[0][0] = 1;\n");
      out.write("                    figurePos[1][0] = 1;\n");
      out.write("                    figurePos[2][0] = 2;\n");
      out.write("                    figurePos[3][0] = 2;\n");
      out.write("                    figurePos[0][1] = 5;\n");
      out.write("                    figurePos[1][1] = 6;\n");
      out.write("                    figurePos[2][1] = 4;\n");
      out.write("                    figurePos[3][1] = 5;\n");
      out.write("                    break;\n");
      out.write("                case(4): // Z\n");
      out.write("                    arrayOfPixels[0][4] = 2;\n");
      out.write("                    arrayOfPixels[0][5] = 2;\n");
      out.write("                    arrayOfPixels[1][5] = 2;\n");
      out.write("                    arrayOfPixels[1][6] = 2;\n");
      out.write("                    figurePos[0][0] = 1;\n");
      out.write("                    figurePos[1][0] = 1;\n");
      out.write("                    figurePos[2][0] = 2;\n");
      out.write("                    figurePos[3][0] = 2;\n");
      out.write("                    figurePos[0][1] = 4;\n");
      out.write("                    figurePos[1][1] = 5;\n");
      out.write("                    figurePos[2][1] = 5;\n");
      out.write("                    figurePos[3][1] = 6;\n");
      out.write("                    break;\n");
      out.write("                case(5): //L\n");
      out.write("                    arrayOfPixels[0][5] = 2;\n");
      out.write("                    for(i = 3; i < 6; i++){\n");
      out.write("                        arrayOfPixels[1][i] = 2;\n");
      out.write("                    }\n");
      out.write("                    figurePos[0][0] = 1;\n");
      out.write("                    figurePos[1][0] = 2;\n");
      out.write("                    figurePos[2][0] = 2;\n");
      out.write("                    figurePos[3][0] = 2;\n");
      out.write("                    figurePos[0][1] = 5;\n");
      out.write("                    figurePos[1][1] = 3;\n");
      out.write("                    figurePos[2][1] = 4;\n");
      out.write("                    figurePos[3][1] = 5;\n");
      out.write("                    break;\n");
      out.write("                case(6): //J\n");
      out.write("                    arrayOfPixels[0][5] = 2;\n");
      out.write("                    for(i = 5; i < 8; i++){\n");
      out.write("                        arrayOfPixels[1][i] = 2;\n");
      out.write("                    }\n");
      out.write("                    figurePos[0][0] = 1;\n");
      out.write("                    figurePos[1][0] = 2;\n");
      out.write("                    figurePos[2][0] = 2;\n");
      out.write("                    figurePos[3][0] = 2;\n");
      out.write("                    figurePos[0][1] = 5;\n");
      out.write("                    figurePos[1][1] = 5;\n");
      out.write("                    figurePos[2][1] = 6;\n");
      out.write("                    figurePos[3][1] = 7;\n");
      out.write("                    break; \n");
      out.write("                case(7): // T\n");
      out.write("                    arrayOfPixels[0][5] = 2;\n");
      out.write("                    arrayOfPixels[0][6] = 2;\n");
      out.write("                    arrayOfPixels[0][7] = 2;\n");
      out.write("                    arrayOfPixels[1][6] = 2;\n");
      out.write("                    figurePos[0][0] = 1;\n");
      out.write("                    figurePos[1][0] = 1;\n");
      out.write("                    figurePos[2][0] = 1;\n");
      out.write("                    figurePos[3][0] = 2;\n");
      out.write("                    figurePos[0][1] = 5;\n");
      out.write("                    figurePos[1][1] = 6;\n");
      out.write("                    figurePos[2][1] = 7;\n");
      out.write("                    figurePos[3][1] = 6;\n");
      out.write("                    break;       \n");
      out.write("                default: break;\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        function moveDown(){\n");
      out.write("            for(let i = 0; i < 4; i++){\n");
      out.write("                arrayOfPixels[figurePos[i][0]][figurePos[i][1]] = 0;\n");
      out.write("                arrayOfPixels[figurePos[i][0]+1][figurePos[i][1]] = 2;\n");
      out.write("                figurePos[i][0] +=1\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        function moveLeft(){\n");
      out.write("            for(let i = 0; i < 4; i++){\n");
      out.write("                arrayOfPixels[figurePos[i][0]][figurePos[i][1]] = 0;\n");
      out.write("                arrayOfPixels[figurePos[i][0]][figurePos[i][1]-1] = 2;\n");
      out.write("                figurePos[i][1] -=1\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        function moveRight(){\n");
      out.write("            for(let i = 0; i < 4; i++){\n");
      out.write("                arrayOfPixels[figurePos[i][0]][figurePos[i][1]] = 0;\n");
      out.write("                arrayOfPixels[figurePos[i][0]][figurePos[i][1]+1] = 2;\n");
      out.write("                figurePos[i][1] +=1\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        function rotateCheck(){\n");
      out.write("            for(let i = 0; i < 4; i++){\n");
      out.write("                for(let j = 0; j < 4; j++){\n");
      out.write("                    if(arrayOfPixels[figurePos[i][0]][figurePos[i][1]] == 1 || !movingCheck('down')){\n");
      out.write("                        for(let i = 0; i < 4; i++){\n");
      out.write("                            for(let j = 0; j < 4; j++){\n");
      out.write("                                figurePos[i][j] = savePos[i][j];\n");
      out.write("                            }\n");
      out.write("                        }\n");
      out.write("                        return false;\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("            return true;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        function rotate(){\n");
      out.write("            cancelAnimationFrame(raf);\n");
      out.write("            for(let i = 0; i < 4; i++){\n");
      out.write("                for(let j = 0; j < 4; j++){\n");
      out.write("                    savePos[i][j] = figurePos[i][j];\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("            switch(figure[0]){\n");
      out.write("                case(1): break;\n");
      out.write("                case(2):switch(figure[1]){\n");
      out.write("                            case(0):\n");
      out.write("                                figurePos[0][0] -= 1;\n");
      out.write("                                figurePos[2][0] += 1;\n");
      out.write("                                figurePos[3][0] += 2;\n");
      out.write("                                figurePos[0][1] += 1;\n");
      out.write("                                figurePos[2][1] -= 1;\n");
      out.write("                                figurePos[3][1] -= 2;\n");
      out.write("                                figure[1] = 1;\n");
      out.write("                                if(!rotateCheck()){\n");
      out.write("                                    figure[1] = 0;\n");
      out.write("                                }\n");
      out.write("                                break;\n");
      out.write("                            case(1):\n");
      out.write("                                figurePos[0][0] += 1;\n");
      out.write("                                figurePos[2][0] -= 1;\n");
      out.write("                                figurePos[3][0] -= 2;\n");
      out.write("                                figurePos[0][1] -= 1;\n");
      out.write("                                figurePos[2][1] += 1;\n");
      out.write("                                figurePos[3][1] += 2;\n");
      out.write("                                figure[1] = 0;\n");
      out.write("                                if(!rotateCheck()){\n");
      out.write("                                    figure[1] = 1;\n");
      out.write("                                }rotateCheck();\n");
      out.write("                                break;   \n");
      out.write("                        }\n");
      out.write("                        break;\n");
      out.write("                case(3):switch(figure[1]){\n");
      out.write("                            case(0):\n");
      out.write("                                figurePos[2][1] += 1;\n");
      out.write("                                figurePos[3][1] += 1;\n");
      out.write("                                figurePos[2][0] -= 2;\n");
      out.write("                                figure[1] = 1;\n");
      out.write("                                if(!rotateCheck()){\n");
      out.write("                                    figure[1] = 0;\n");
      out.write("                                }\n");
      out.write("                                break;\n");
      out.write("                            case(1):\n");
      out.write("                                figurePos[2][1] -= 1;\n");
      out.write("                                figurePos[3][1] -= 1;\n");
      out.write("                                figurePos[2][0] += 2;\n");
      out.write("                                figure[1] = 0;\n");
      out.write("                                if(!rotateCheck()){\n");
      out.write("                                    figure[1] = 1;\n");
      out.write("                                }\n");
      out.write("                                break;\n");
      out.write("                            }\n");
      out.write("                            break;\n");
      out.write("                case(4):switch(figure[1]){\n");
      out.write("                            case(0):\n");
      out.write("                                figurePos[3][1] -= 1;\n");
      out.write("                                figurePos[2][1] -= 1;\n");
      out.write("                                figurePos[3][0] -= 2;\n");
      out.write("                                figure[1] = 1;\n");
      out.write("                                if(!rotateCheck()){\n");
      out.write("                                    figure[1] = 0;\n");
      out.write("                                }\n");
      out.write("                                break;\n");
      out.write("                            case(1):\n");
      out.write("                                figurePos[3][1] += 1;\n");
      out.write("                                figurePos[2][1] += 1;\n");
      out.write("                                figurePos[3][0] += 2;\n");
      out.write("                                figure[1] = 0;\n");
      out.write("                                if(!rotateCheck()){\n");
      out.write("                                    figure[1] = 1;\n");
      out.write("                                }\n");
      out.write("                                break;\n");
      out.write("                            }\n");
      out.write("                            break;\n");
      out.write("                case(5):switch(figure[1]){\n");
      out.write("                            case(0):\n");
      out.write("                                figurePos[0][0] += 2;\n");
      out.write("                                figurePos[1][0] -= 1;\n");
      out.write("                                figurePos[3][0] += 1;\n");
      out.write("                                figurePos[1][1] += 1;\n");
      out.write("                                figurePos[3][1] -= 1;\n");
      out.write("                                figure[1] = 1;\n");
      out.write("                                if(!rotateCheck()){\n");
      out.write("                                    figure[1] = 0;\n");
      out.write("                                }\n");
      out.write("                                break;\n");
      out.write("                            case(1):\n");
      out.write("                                figurePos[1][0] += 1;\n");
      out.write("                                figurePos[3][0] -= 1;\n");
      out.write("                                figurePos[0][1] -= 2;\n");
      out.write("                                figurePos[1][1] += 1;\n");
      out.write("                                figurePos[3][1] -= 1;\n");
      out.write("                                figure[1] = 2;\n");
      out.write("                                if(!rotateCheck()){\n");
      out.write("                                    figure[1] = 1;\n");
      out.write("                                }\n");
      out.write("                                break;\n");
      out.write("                            case(2):\n");
      out.write("                                figurePos[0][0] -= 2;\n");
      out.write("                                figurePos[1][0] += 1;\n");
      out.write("                                figurePos[3][0] -= 1;\n");
      out.write("                                figurePos[1][1] -= 1;\n");
      out.write("                                figurePos[3][1] += 1;\n");
      out.write("                                figure[1] = 3;\n");
      out.write("                                if(!rotateCheck()){\n");
      out.write("                                    figure[1] = 2;\n");
      out.write("                                }\n");
      out.write("                                break;\n");
      out.write("                            case(3):\n");
      out.write("                                figurePos[1][0] -= 1;\n");
      out.write("                                figurePos[3][0] += 1;\n");
      out.write("                                figurePos[0][1] += 2;\n");
      out.write("                                figurePos[1][1] -= 1;\n");
      out.write("                                figurePos[3][1] += 1;\n");
      out.write("                                figure[1] = 0;\n");
      out.write("                                if(!rotateCheck()){\n");
      out.write("                                    figure[1] = 3;\n");
      out.write("                                }\n");
      out.write("                                break;\n");
      out.write("                            }\n");
      out.write("                            break;\n");
      out.write("                case(6):switch(figure[1]){\n");
      out.write("                            case(0):\n");
      out.write("                                figurePos[1][0] -= 1;\n");
      out.write("                                figurePos[3][0] += 1;\n");
      out.write("                                figurePos[0][1] += 2;\n");
      out.write("                                figurePos[1][1] += 1;\n");
      out.write("                                figurePos[3][1] -= 1;\n");
      out.write("                                figure[1] = 1;\n");
      out.write("                                if(!rotateCheck()){\n");
      out.write("                                    figure[1] = 0;\n");
      out.write("                                }\n");
      out.write("                                break;\n");
      out.write("                            case(1):\n");
      out.write("                                figurePos[0][0] += 2;\n");
      out.write("                                figurePos[1][0] += 1;\n");
      out.write("                                figurePos[3][0] -= 1;\n");
      out.write("                                figurePos[1][1] += 1;\n");
      out.write("                                figurePos[3][1] -= 1;\n");
      out.write("                                figure[1] = 2;\n");
      out.write("                                if(!rotateCheck()){\n");
      out.write("                                    figure[1] = 1;\n");
      out.write("                                }\n");
      out.write("                                break;\n");
      out.write("                            case(2):\n");
      out.write("                                figurePos[1][0] += 1;\n");
      out.write("                                figurePos[3][0] -= 1;\n");
      out.write("                                figurePos[0][1] -= 2;\n");
      out.write("                                figurePos[1][1] -= 1;\n");
      out.write("                                figurePos[3][1] += 1;\n");
      out.write("                                figure[1] = 3;\n");
      out.write("                                if(!rotateCheck()){\n");
      out.write("                                    figure[1] = 2;\n");
      out.write("                                }\n");
      out.write("                                break;\n");
      out.write("                            case(3):\n");
      out.write("                                figurePos[0][0] -= 2;\n");
      out.write("                                figurePos[1][0] -= 1;\n");
      out.write("                                figurePos[3][0] += 1;\n");
      out.write("                                figurePos[1][1] -= 1;\n");
      out.write("                                figurePos[3][1] += 1;\n");
      out.write("                                figure[1] = 0;\n");
      out.write("                                if(!rotateCheck()){\n");
      out.write("                                    figure[1] = 3;\n");
      out.write("                                }\n");
      out.write("                                break;\n");
      out.write("                            }\n");
      out.write("                            break;\n");
      out.write("                case(7):switch(figure[1]){\n");
      out.write("                            case(0):\n");
      out.write("                                figurePos[2][0] -= 1;\n");
      out.write("                                figurePos[2][1] -= 1;\n");
      out.write("                                figure[1] = 1;\n");
      out.write("                                if(!rotateCheck()){\n");
      out.write("                                    figure[1] = 0;\n");
      out.write("                                }\n");
      out.write("                                break;\n");
      out.write("                            case(1):\n");
      out.write("                                figurePos[3][0] -= 1;\n");
      out.write("                                figurePos[3][1] += 1;\n");
      out.write("                                figure[1] = 2;\n");
      out.write("                                if(!rotateCheck()){\n");
      out.write("                                    figure[1] = 1;\n");
      out.write("                                }\n");
      out.write("                                break;\n");
      out.write("                            case(2):\n");
      out.write("                                figurePos[0][0] += 1;\n");
      out.write("                                figurePos[0][1] += 1;\n");
      out.write("                                figure[1] = 3;\n");
      out.write("                                if(!rotateCheck()){\n");
      out.write("                                    figure[1] = 2;\n");
      out.write("                                }\n");
      out.write("                                break;\n");
      out.write("                            case(3):\n");
      out.write("                                figurePos[0][0] -= 1;\n");
      out.write("                                figurePos[2][0] += 1;\n");
      out.write("                                figurePos[3][0] += 1;\n");
      out.write("                                figurePos[0][1] -= 1;\n");
      out.write("                                figurePos[2][1] += 1;\n");
      out.write("                                figurePos[3][1] -= 1;\n");
      out.write("                                figure[1] = 0;\n");
      out.write("                                if(!rotateCheck()){\n");
      out.write("                                    figure[1] = 3;\n");
      out.write("                                }\n");
      out.write("                                break;\n");
      out.write("                            }\n");
      out.write("                            break;\n");
      out.write("            }\n");
      out.write("            requestAnimationFrame(game);\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        document.addEventListener('keydown', function(e) {\n");
      out.write("            // 37 â, 38 â, 39 â, 40 â;\n");
      out.write("            if (playing){\n");
      out.write("                switch(e.which){\n");
      out.write("                    case(37): if(movingCheck('left')){\n");
      out.write("                                moveLeft();\n");
      out.write("                                };\n");
      out.write("                            break;\n");
      out.write("                    case(39): if(movingCheck('right')){\n");
      out.write("                                moveRight();\n");
      out.write("                            };\n");
      out.write("                            break;\n");
      out.write("                    case(38): rotate();\n");
      out.write("                                break;\n");
      out.write("                    case(40): if(movingCheck('down')){\n");
      out.write("                                moveDown();\n");
      out.write("                                }\n");
      out.write("                            break;\n");
      out.write("                    default: break;\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("\n");
      out.write("        function movingCheck(side){\n");
      out.write("            switch(side){\n");
      out.write("                case('left'): for(let i = 0; i < 4; i++){\n");
      out.write("                                    if(arrayOfPixels[figurePos[i][0]][figurePos[i][1]-1] == 1)\n");
      out.write("                                    {\n");
      out.write("                                        return false;\n");
      out.write("                                    }\n");
      out.write("                              }\n");
      out.write("                              break;\n");
      out.write("                case('right'):for(let i = 0; i < 4; i++){\n");
      out.write("                                    if(arrayOfPixels[figurePos[i][0]][figurePos[i][1]+1] == 1 || figurePos[i][1]+1 >= widthInPixel)\n");
      out.write("                                    {\n");
      out.write("                                        return false;\n");
      out.write("                                    }\n");
      out.write("                              }\n");
      out.write("                              break;\n");
      out.write("                case('down'): for(let i = 0; i < 4; i++){\n");
      out.write("                                    if(arrayOfPixels[figurePos[i][0]+1][figurePos[i][1]] == 1 || figurePos[i][0]+1 > heightInPixel-3 || figurePos[i][0]+1 < 0)\n");
      out.write("                                    {\n");
      out.write("                                        return false;\n");
      out.write("                                    }\n");
      out.write("                              }\n");
      out.write("                              break;\n");
      out.write("            }\n");
      out.write("            return true;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        function saveState(){\n");
      out.write("            for(let i = 0; i < 4; i++){\n");
      out.write("                arrayOfPixels[figurePos[i][0]][figurePos[i][1]] = 1;\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        function randomInteger(min, max) {\n");
      out.write("            let rand = min + Math.random() * (max + 1 - min);\n");
      out.write("            return Math.floor(rand);\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        function cleanLine(){\n");
      out.write("            let multiplier = 0;\n");
      out.write("            let counter = 0;\n");
      out.write("            for(let i = 2; i < heightInPixel; i++){\n");
      out.write("                for(let j = 1; j < widthInPixel; j++){\n");
      out.write("                    if(arrayOfPixels[i][j] == 1){\n");
      out.write("                        counter++;\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("                if(counter > 10){\n");
      out.write("                    for(let x = i; x > 2; x--){\n");
      out.write("                        for(let y = 1; y < widthInPixel; y++){\n");
      out.write("                            arrayOfPixels[x][y] = arrayOfPixels[x-1][y];\n");
      out.write("                        }\n");
      out.write("                    }\n");
      out.write("                    multiplier++\n");
      out.write("                    if(gameSpeed > 30){\n");
      out.write("                        gameSpeed -= 2;\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("                counter = 0;\n");
      out.write("            }\n");
      out.write("            if (multiplier > 0){\n");
      out.write("                scores += 10 + 20 * (multiplier-1);\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        function stopGame(){\n");
      out.write("            for(let i = 1; i < widthInPixel-1; i++){\n");
      out.write("                if(arrayOfPixels[1][i] == 1){\n");
      out.write("                    playing = false;\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        function checkName(someName) {\n");
      out.write("            if (someName.length > 12)\n");
      out.write("            {\n");
      out.write("                return false;\n");
      out.write("            }\n");
      out.write("            for(let i = 0; i < someName.length; i++){\n");
      out.write("                    if((someName.charCodeAt(i) < 'a'.charCodeAt(0) || someName.charCodeAt(i) > 'z'.charCodeAt(0)) && \n");
      out.write("                    (someName.charCodeAt(i) < 'A'.charCodeAt(0) || someName.charCodeAt(i) > 'Z'.charCodeAt(0)) && \n");
      out.write("                    (someName.charCodeAt(i) < '0'.charCodeAt(0) || someName.charCodeAt(i) > '9'.charCodeAt(0)))\n");
      out.write("                    {\n");
      out.write("                        return false;\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("            return true;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        figure[0] = randomInteger(1, 7);\n");
      out.write("        figure[1] = 0;\n");
      out.write("        nextFig = randomInteger(1,7);\n");
      out.write("        putInArray(figure[0]);\n");
      out.write("        leaderBoard();\n");
      out.write("        drawNextText();\n");
      out.write("        drawNextFigure(nextFig);\n");
      out.write("        drawButtonRestart();\n");
      out.write("        drawButtonLeaderboard();\n");
      out.write("        function game(){\n");
      out.write("            fps++;\n");
      out.write("            drawGame();\n");
      out.write("            raf = requestAnimationFrame(game);\n");
      out.write("            if(move && movingCheck('down')){\n");
      out.write("                if(++fps > gameSpeed){\n");
      out.write("                    moveDown();\n");
      out.write("                    fps = 0;\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("            else{\n");
      out.write("                cancelAnimationFrame(raf);\n");
      out.write("                saveState();\n");
      out.write("                cleanLine();\n");
      out.write("                stopGame();\n");
      out.write("                if(!playing){\n");
      out.write("                    drawGame();\n");
      out.write("                    let result = \"\";\n");
      out.write("                    if(scores > 0){\n");
      out.write("                        result = prompt(\"Game over! Your score: \"+scores+ \"! Please enter your name (Use only a-z, A-Z, 0-9, and 12 letters max).\");\n");
      out.write("                        while(true){\n");
      out.write("                            if (checkName(result)){\n");
      out.write("                                break;\n");
      out.write("                            }\n");
      out.write("                            result = prompt(\"Please try to enter your name again (Use only a-z, A-Z, 0-9, and 12 letters max).\");\n");
      out.write("                        }\n");
      out.write("                        let Player = {\n");
      out.write("                            name: \"\",\n");
      out.write("                            score: 0\n");
      out.write("                        }\n");
      out.write("                        Player.name = result;\n");
      out.write("                        Player.score = scores;\n");
      out.write("                        var xhr = new XMLHttpRequest();\n");
      out.write("                        var body = JSON.stringify(Player);\n");
      out.write("                        xhr.open(\"POST\", 'http://localhost:8080/ServletTetris/scores/add', true);\n");
      out.write("                        xhr.send(body);\n");
      out.write("                        alert(\"Added successfully\");\n");
      out.write("                        document.location.href = \"http://localhost:8080/ServletTetris/game\";\n");
      out.write("                        return;\n");
      out.write("                    }\n");
      out.write("                    else{\n");
      out.write("                        alert(\"Game over! Your score: 0! Try again to get to the leaderboard!\");\n");
      out.write("                        document.location.href = \"http://localhost:8080/ServletTetris/game\";\n");
      out.write("                        return;\n");
      out.write("                    }\n");
      out.write("                    \n");
      out.write("                }\n");
      out.write("                requestAnimationFrame(game);\n");
      out.write("                figure[0] = nextFig;\n");
      out.write("                figure[1] = 0;\n");
      out.write("                nextFig = randomInteger(1,7);\n");
      out.write("                putInArray(figure[0]);\n");
      out.write("                drawNextFigure(nextFig);\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("        raf = requestAnimationFrame(game);\n");
      out.write("        \n");
      out.write("    </script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
